{
  "version": 3,
  "sources": ["../../.pnpm/@zumer+snapdom@1.7.1/node_modules/@zumer/snapdom/dist/snapdom.mjs"],
  "sourcesContent": ["\n/*\n* snapdom\n* v.1.7.1\n* Author Juan Martin Muda\n* License MIT\n**/\n\n// src/core/cache.js\nvar imageCache = /* @__PURE__ */ new Map();\nvar bgCache = /* @__PURE__ */ new Map();\nvar resourceCache = /* @__PURE__ */ new Map();\nvar defaultStylesCache = /* @__PURE__ */ new Map();\nvar baseCSSCache = /* @__PURE__ */ new Map();\nvar computedStyleCache = /* @__PURE__ */ new WeakMap();\n\n// src/utils/cssTools.js\nvar commonTags = [\n  \"div\",\n  \"span\",\n  \"p\",\n  \"a\",\n  \"img\",\n  \"ul\",\n  \"li\",\n  \"button\",\n  \"input\",\n  \"select\",\n  \"textarea\",\n  \"label\",\n  \"section\",\n  \"article\",\n  \"header\",\n  \"footer\",\n  \"nav\",\n  \"main\",\n  \"aside\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"svg\",\n  \"path\",\n  \"circle\",\n  \"rect\",\n  \"line\",\n  \"g\",\n  \"table\",\n  \"thead\",\n  \"tbody\",\n  \"tr\",\n  \"td\",\n  \"th\"\n];\nfunction precacheCommonTags() {\n  for (let tag of commonTags) {\n    getDefaultStyleForTag(tag);\n  }\n}\nfunction getDefaultStyleForTag(tagName) {\n  if (defaultStylesCache.has(tagName)) {\n    return defaultStylesCache.get(tagName);\n  }\n  const skipTags = /* @__PURE__ */ new Set([\"script\", \"style\", \"meta\", \"link\", \"noscript\", \"template\"]);\n  if (skipTags.has(tagName)) {\n    const empty = {};\n    defaultStylesCache.set(tagName, empty);\n    return empty;\n  }\n  let sandbox = document.getElementById(\"snapdom-sandbox\");\n  if (!sandbox) {\n    sandbox = document.createElement(\"div\");\n    sandbox.id = \"snapdom-sandbox\";\n    sandbox.style.position = \"absolute\";\n    sandbox.style.left = \"-9999px\";\n    sandbox.style.top = \"-9999px\";\n    sandbox.style.width = \"0\";\n    sandbox.style.height = \"0\";\n    sandbox.style.overflow = \"hidden\";\n    document.body.appendChild(sandbox);\n  }\n  const el = document.createElement(tagName);\n  el.style.all = \"initial\";\n  sandbox.appendChild(el);\n  const styles = getComputedStyle(el);\n  const defaults = {};\n  for (let prop of styles) {\n    defaults[prop] = styles.getPropertyValue(prop);\n  }\n  sandbox.removeChild(el);\n  defaultStylesCache.set(tagName, defaults);\n  return defaults;\n}\nfunction getStyleKey(snapshot, tagName, compress = false) {\n  const entries = [];\n  const defaultStyles = getDefaultStyleForTag(tagName);\n  for (let [prop, value] of Object.entries(snapshot)) {\n    if (!compress) {\n      if (value) {\n        entries.push(`${prop}:${value}`);\n      }\n    } else {\n      const defaultValue = defaultStyles[prop];\n      if (value && value !== defaultValue) {\n        entries.push(`${prop}:${value}`);\n      }\n    }\n  }\n  return entries.sort().join(\";\");\n}\nfunction collectUsedTagNames(root) {\n  const tagSet = /* @__PURE__ */ new Set();\n  if (root.nodeType !== Node.ELEMENT_NODE && root.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n    return [];\n  }\n  if (root.tagName) {\n    tagSet.add(root.tagName.toLowerCase());\n  }\n  if (typeof root.querySelectorAll === \"function\") {\n    root.querySelectorAll(\"*\").forEach((el) => tagSet.add(el.tagName.toLowerCase()));\n  }\n  return Array.from(tagSet);\n}\nfunction generateDedupedBaseCSS(usedTagNames) {\n  const groups = /* @__PURE__ */ new Map();\n  for (let tagName of usedTagNames) {\n    const styles = defaultStylesCache.get(tagName);\n    if (!styles) continue;\n    const key = Object.entries(styles).map(([k, v]) => `${k}:${v};`).sort().join(\"\");\n    if (!groups.has(key)) {\n      groups.set(key, []);\n    }\n    groups.get(key).push(tagName);\n  }\n  let css = \"\";\n  for (let [styleBlock, tagList] of groups.entries()) {\n    css += `${tagList.join(\",\")} { ${styleBlock} }\n`;\n  }\n  return css;\n}\nfunction generateCSSClasses(styleMap) {\n  const keySet = new Set(styleMap.values());\n  const classMap = /* @__PURE__ */ new Map();\n  let counter = 1;\n  for (const key of keySet) {\n    classMap.set(key, `c${counter++}`);\n  }\n  return classMap;\n}\n\n// src/utils/helpers.js\nfunction idle(fn, { fast = false } = {}) {\n  if (fast) return fn();\n  if (\"requestIdleCallback\" in window) {\n    requestIdleCallback(fn, { timeout: 50 });\n  } else {\n    setTimeout(fn, 1);\n  }\n}\nfunction getStyle(el, pseudo = null) {\n  if (!(el instanceof Element)) {\n    return window.getComputedStyle(el, pseudo);\n  }\n  let map = computedStyleCache.get(el);\n  if (!map) {\n    map = /* @__PURE__ */ new Map();\n    computedStyleCache.set(el, map);\n  }\n  if (!map.has(pseudo)) {\n    const st = window.getComputedStyle(el, pseudo);\n    map.set(pseudo, st);\n  }\n  return map.get(pseudo);\n}\nfunction parseContent(content) {\n  let clean = content.replace(/^['\"]|['\"]$/g, \"\");\n  if (clean.startsWith(\"\\\\\")) {\n    try {\n      return String.fromCharCode(parseInt(clean.replace(\"\\\\\", \"\"), 16));\n    } catch {\n      return clean;\n    }\n  }\n  return clean;\n}\nfunction extractURL(value) {\n  const urlStart = value.indexOf(\"url(\");\n  if (urlStart === -1) return null;\n  let url = value.slice(urlStart + 4).trim();\n  if (url.endsWith(\")\")) url = url.slice(0, -1).trim();\n  if (url.startsWith('\"') && url.endsWith('\"') || url.startsWith(\"'\") && url.endsWith(\"'\")) {\n    url = url.slice(1, -1);\n  }\n  return url;\n}\nfunction isIconFont(familyOrUrl) {\n  const iconFontPatterns = [\n    /font\\s*awesome/i,\n    /material\\s*icons/i,\n    /ionicons/i,\n    /glyphicons/i,\n    /feather/i,\n    /bootstrap\\s*icons/i,\n    /remix\\s*icons/i,\n    /heroicons/i\n  ];\n  return iconFontPatterns.some((rx) => rx.test(familyOrUrl));\n}\nfunction fetchImage(src, timeout = 3e3, crossOrigin = \"anonymous\") {\n  if (imageCache.has(src)) {\n    return Promise.resolve(imageCache.get(src));\n  }\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error(\"Image load timed out\"));\n    }, timeout);\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    image.onload = async () => {\n      clearTimeout(timeoutId);\n      try {\n        await image.decode();\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        try {\n          const dataURL = canvas.toDataURL(\"image/png\");\n          imageCache.set(src, dataURL);\n          resolve(dataURL);\n        } catch (e) {\n          reject(new Error(\"CORS restrictions prevented image capture\"));\n        }\n      } catch (e) {\n        reject(e);\n      }\n    };\n    image.onerror = (e) => {\n      clearTimeout(timeoutId);\n      reject(new Error(\"Failed to load image: \" + (e.message || \"Unknown error\")));\n    };\n    image.src = src;\n  });\n}\nfunction snapshotComputedStyle(style) {\n  const snap = {};\n  for (let prop of style) {\n    snap[prop] = style.getPropertyValue(prop);\n  }\n  return snap;\n}\nfunction isSafari() {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\n\n// src/modules/styles.js\nfunction inlineAllStyles(source, clone, styleMap, cache, compress) {\n  if (source.tagName === \"STYLE\") return;\n  if (!cache.has(source)) {\n    cache.set(source, getStyle(source));\n  }\n  const style = cache.get(source);\n  const snapshot = snapshotComputedStyle(style);\n  const tagName = source.tagName?.toLowerCase() || \"div\";\n  const key = getStyleKey(snapshot, tagName, compress);\n  styleMap.set(clone, key);\n}\n\n// src/core/clone.js\nfunction deepClone(node, styleMap, styleCache, nodeMap, compress) {\n  if (node.nodeType === Node.ELEMENT_NODE && node.getAttribute(\"data-capture\") === \"exclude\") {\n    const spacer = document.createElement(\"div\");\n    const rect = node.getBoundingClientRect();\n    spacer.style.cssText = `display: inline-block; width: ${rect.width}px; height: ${rect.height}px; visibility: hidden;`;\n    return spacer;\n  }\n  if (node.tagName === \"IFRAME\") {\n    const fallback = document.createElement(\"div\");\n    fallback.textContent = \"\";\n    fallback.style.cssText = `width: ${node.offsetWidth}px; height: ${node.offsetHeight}px; background: repeating-linear-gradient(45deg, #ddd, #ddd 5px, #f9f9f9 5px, #f9f9f9 10px);display: flex;align-items: center;justify-content: center;font-size: 12px;color: #555; border: 1px solid #aaa;`;\n    return fallback;\n  }\n  if (node.nodeType === Node.ELEMENT_NODE && node.getAttribute(\"data-capture\") === \"placeholder\") {\n    const clone2 = node.cloneNode(false);\n    nodeMap.set(clone2, node);\n    inlineAllStyles(node, clone2, styleMap, styleCache, compress);\n    const placeholder = document.createElement(\"div\");\n    placeholder.textContent = node.getAttribute(\"data-placeholder-text\") || \"\";\n    placeholder.style.cssText = `color: #666;font-size: 12px;text-align: center;line-height: 1.4;padding: 0.5em;box-sizing: border-box;`;\n    clone2.appendChild(placeholder);\n    return clone2;\n  }\n  if (node.tagName === \"CANVAS\") {\n    const dataURL = node.toDataURL();\n    const img = document.createElement(\"img\");\n    img.src = dataURL;\n    img.width = node.width;\n    img.height = node.height;\n    img.style.display = \"inline-block\";\n    img.style.width = `${node.width}px`;\n    img.style.height = `${node.height}px`;\n    return img;\n  }\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (node.parentElement?.shadowRoot) {\n      const tag = node.parentElement.tagName.toLowerCase();\n      if (customElements.get(tag)) return null;\n    }\n    return node.cloneNode(true);\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) return node.cloneNode(true);\n  const clone = node.cloneNode(false);\n  nodeMap.set(clone, node);\n  if (node instanceof HTMLInputElement) {\n    clone.value = node.value;\n    clone.setAttribute(\"value\", node.value);\n    if (node.checked !== void 0) {\n      clone.checked = node.checked;\n      if (node.checked) clone.setAttribute(\"checked\", \"\");\n    }\n  } else if (node instanceof HTMLTextAreaElement) {\n    clone.value = node.value;\n    clone.textContent = node.value;\n  } else if (node instanceof HTMLSelectElement) {\n    clone.value = node.value;\n    Array.from(clone.options).forEach((opt) => {\n      if (opt.value === node.value) {\n        opt.setAttribute(\"selected\", \"\");\n      } else {\n        opt.removeAttribute(\"selected\");\n      }\n    });\n  }\n  inlineAllStyles(node, clone, styleMap, styleCache, compress);\n  const frag = document.createDocumentFragment();\n  node.childNodes.forEach((child) => {\n    const clonedChild = deepClone(child, styleMap, styleCache, nodeMap, compress);\n    if (clonedChild) frag.appendChild(clonedChild);\n  });\n  clone.appendChild(frag);\n  if (node.shadowRoot) {\n    const shadowContent = Array.from(node.shadowRoot.children).filter((el) => el.tagName !== \"STYLE\").map((el) => deepClone(el, styleMap, styleCache, nodeMap)).filter(Boolean);\n    const shadowFrag = document.createDocumentFragment();\n    shadowContent.forEach((child) => shadowFrag.appendChild(child));\n    clone.appendChild(shadowFrag);\n  }\n  return clone;\n}\n\n// src/modules/fonts.js\nasync function iconToImage(unicodeChar, fontFamily, fontWeight, fontSize = 32, color = \"#000\") {\n  fontFamily = fontFamily.replace(/^['\"]+|['\"]+$/g, \"\");\n  const dpr = window.devicePixelRatio || 1;\n  const tempCanvas = document.createElement(\"canvas\");\n  const tempCtx = tempCanvas.getContext(\"2d\");\n  tempCtx.font = fontWeight ? `${fontWeight} ${fontSize}px \"${fontFamily}\"` : `${fontSize}px \"${fontFamily}\"`;\n  const metrics = tempCtx.measureText(unicodeChar);\n  const ascent = metrics.actualBoundingBoxAscent || fontSize * 0.8;\n  const descent = metrics.actualBoundingBoxDescent || fontSize * 0.2;\n  const height = ascent + descent;\n  const width = metrics.width;\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = Math.ceil(width * dpr);\n  canvas.height = Math.ceil(height * dpr);\n  const ctx = canvas.getContext(\"2d\");\n  ctx.scale(dpr, dpr);\n  ctx.font = tempCtx.font;\n  ctx.textAlign = \"left\";\n  ctx.textBaseline = \"alphabetic\";\n  ctx.fillStyle = color;\n  ctx.fillText(unicodeChar, 0, ascent);\n  return canvas.toDataURL();\n}\nasync function embedCustomFonts({ ignoreIconFonts = true, preCached = false } = {}) {\n  const links = Array.from(document.querySelectorAll('link[rel=\"stylesheet\"]')).filter((link) => link.href);\n  let finalCSS = \"\";\n  for (const link of links) {\n    try {\n      const res = await fetch(link.href);\n      const cssText = await res.text();\n      if (ignoreIconFonts && (isIconFont(link.href) || isIconFont(cssText))) {\n        continue;\n      }\n      const urlRegex = /url\\(([^)]+)\\)/g;\n      const inlinedCSS = await Promise.all(\n        Array.from(cssText.matchAll(urlRegex)).map(async (match) => {\n          let rawUrl = extractURL(match[0]);\n          if (!rawUrl) return null;\n          let url = rawUrl;\n          if (!url.startsWith(\"http\")) {\n            url = new URL(url, link.href).href;\n          }\n          try {\n            url = encodeURI(url);\n          } catch (e) {\n            console.warn(\"[snapdom] Failed to encode font URL:\", url);\n          }\n          if (ignoreIconFonts && isIconFont(url)) {\n            return null;\n          }\n          if (resourceCache.has(url)) {\n            return { original: match[0], inlined: `url(${resourceCache.get(url)})` };\n          }\n          try {\n            const fontRes = await fetch(url);\n            const blob = await fontRes.blob();\n            const b64 = await new Promise((resolve) => {\n              const reader = new FileReader();\n              reader.onload = () => resolve(reader.result);\n              reader.readAsDataURL(blob);\n            });\n            resourceCache.set(url, b64);\n            return { original: match[0], inlined: `url(${b64})` };\n          } catch (err) {\n            console.warn(\"[snapdom] Failed to fetch font:\", url);\n            return null;\n          }\n        })\n      );\n      let cssFinal = cssText;\n      for (const r of inlinedCSS) {\n        if (r) {\n          cssFinal = cssFinal.replace(r.original, r.inlined);\n        }\n      }\n      finalCSS += cssFinal + \"\\n\";\n    } catch (e) {\n      console.warn(\"[snapdom] Failed to fetch CSS:\", link.href);\n    }\n  }\n  for (const sheet of document.styleSheets) {\n    try {\n      if (!sheet.href || links.every((link) => link.href !== sheet.href)) {\n        for (const rule of sheet.cssRules) {\n          if (rule.type === CSSRule.FONT_FACE_RULE) {\n            const src = rule.style.getPropertyValue(\"src\");\n            if (!src) continue;\n            const urlRegex = /url\\(([^)]+)\\)/g;\n            let inlinedSrc = src;\n            const matches = Array.from(src.matchAll(urlRegex));\n            for (const match of matches) {\n              let rawUrl = match[1].trim().replace(/^[\"']|[\"']$/g, \"\");\n              if (!rawUrl) continue;\n              let url = rawUrl;\n              if (!url.startsWith(\"http\") && !url.startsWith(\"data:\")) {\n                url = new URL(url, sheet.href || location.href).href;\n              }\n              if (ignoreIconFonts && isIconFont(url)) {\n                continue;\n              }\n              if (resourceCache.has(url)) {\n                inlinedSrc = inlinedSrc.replace(match[0], `url(${resourceCache.get(url)})`);\n                continue;\n              }\n              try {\n                const res = await fetch(url);\n                const blob = await res.blob();\n                const b64 = await new Promise((resolve) => {\n                  const reader = new FileReader();\n                  reader.onload = () => resolve(reader.result);\n                  reader.readAsDataURL(blob);\n                });\n                resourceCache.set(url, b64);\n                inlinedSrc = inlinedSrc.replace(match[0], `url(${b64})`);\n              } catch (e) {\n                console.warn(\"[snapdom] Failed to fetch font URL:\", url);\n              }\n            }\n            finalCSS += `@font-face {\n  font-family: ${rule.style.getPropertyValue(\"font-family\")};\n  src: ${inlinedSrc};\n  font-style: ${rule.style.getPropertyValue(\"font-style\") || \"normal\"};\n  font-weight: ${rule.style.getPropertyValue(\"font-weight\") || \"normal\"};\n}\n`;\n          }\n        }\n      }\n    } catch (e) {\n      console.warn(\"[snapdom] Cannot access stylesheet\", sheet.href, e);\n    }\n  }\n  for (const font of document.fonts) {\n    if (font.family && font.status === \"loaded\" && font._snapdomSrc) {\n      let b64 = font._snapdomSrc;\n      if (!b64.startsWith(\"data:\")) {\n        if (resourceCache.has(font._snapdomSrc)) {\n          b64 = resourceCache.get(font._snapdomSrc);\n        } else {\n          try {\n            const res = await fetch(font._snapdomSrc);\n            const blob = await res.blob();\n            b64 = await new Promise((resolve) => {\n              const reader = new FileReader();\n              reader.onload = () => resolve(reader.result);\n              reader.readAsDataURL(blob);\n            });\n            resourceCache.set(font._snapdomSrc, b64);\n          } catch (e) {\n            console.warn(\"[snapdom] Failed to fetch dynamic font src:\", font._snapdomSrc);\n            continue;\n          }\n        }\n      }\n      finalCSS += `@font-face {\n  font-family: '${font.family}';\n  src: url(${b64});\n  font-style: ${font.style || \"normal\"};\n  font-weight: ${font.weight || \"normal\"};\n}\n`;\n    }\n  }\n  if (finalCSS && preCached) {\n    const style = document.createElement(\"style\");\n    style.setAttribute(\"data-snapdom\", \"embedFonts\");\n    style.textContent = finalCSS;\n    document.head.appendChild(style);\n  }\n  return finalCSS;\n}\n\n// src/modules/pseudo.js\nasync function inlinePseudoElements(source, clone, styleMap, styleCache, compress, embedFonts = false) {\n  if (!(source instanceof Element) || !(clone instanceof Element)) return;\n  for (const pseudo of [\"::before\", \"::after\"]) {\n    try {\n      const style = getStyle(source, pseudo);\n      if (!style) continue;\n      const content = style.getPropertyValue(\"content\");\n      const bg = style.getPropertyValue(\"background-image\");\n      const hasContent = content && content !== \"none\" && content !== '\"\"' && content !== \"''\";\n      const hasBg = bg && bg.startsWith(\"url(\");\n      if (hasContent || hasBg) {\n        const fontFamily = style.getPropertyValue(\"font-family\");\n        const fontSize = parseInt(style.getPropertyValue(\"font-size\")) || 32;\n        const fontWeight = parseInt(style.getPropertyValue(\"font-weight\")) || false;\n        const color = style.getPropertyValue(\"color\") || \"#000\";\n        const pseudoEl = document.createElement(\"span\");\n        pseudoEl.dataset.snapdomPseudo = pseudo;\n        const snapshot = snapshotComputedStyle(style);\n        const key = getStyleKey(snapshot, \"span\", compress);\n        styleMap.set(pseudoEl, key);\n        const isIconFont2 = fontFamily && /font.*awesome|material|bootstrap|glyphicons|ionicons|remixicon|simple-line-icons|octicons|feather|typicons|weathericons/i.test(\n          fontFamily\n        );\n        let cleanContent = parseContent(content);\n        if (!embedFonts && isIconFont2 && cleanContent.length === 1) {\n          const imgEl = document.createElement(\"img\");\n          imgEl.src = await iconToImage(\n            cleanContent,\n            fontFamily,\n            fontWeight,\n            fontSize,\n            color\n          );\n          imgEl.style = \"display:block;width:100%;height:100%;object-fit:contain;\";\n          pseudoEl.appendChild(imgEl);\n        } else if (cleanContent.startsWith(\"url(\")) {\n          const rawUrl = extractURL(cleanContent);\n          if (rawUrl) {\n            try {\n              const imgEl = document.createElement(\"img\");\n              const dataUrl = await fetchImage(encodeURI(rawUrl));\n              imgEl.src = dataUrl;\n              imgEl.style = \"display:block;width:100%;height:100%;object-fit:contain;\";\n              pseudoEl.appendChild(imgEl);\n            } catch (e) {\n              console.error(`[snapdom] Error in pseudo ${pseudo} for`, source, e);\n            }\n          }\n        } else if (!isIconFont2 && cleanContent && cleanContent !== \"none\") {\n          pseudoEl.textContent = cleanContent;\n        }\n        if (hasBg && bg) {\n          const rawUrl = extractURL(bg);\n          if (rawUrl) {\n            try {\n              const dataUrl = await fetchImage(encodeURI(rawUrl));\n              pseudoEl.style.backgroundImage = `url(${dataUrl})`;\n            } catch (e) {\n              console.warn(`[snapdom] Failed to inline background-image for ${pseudo}`, e);\n            }\n          }\n        }\n        const hasContent2 = pseudoEl.childNodes.length > 0 || pseudoEl.textContent && pseudoEl.textContent.trim() !== \"\";\n        if (!hasContent2 && !hasBg) continue;\n        if (pseudo === \"::before\") {\n          clone.insertBefore(pseudoEl, clone.firstChild);\n        } else {\n          clone.appendChild(pseudoEl);\n        }\n      }\n    } catch (e) {\n      console.warn(`[snapdom] Failed to capture ${pseudo} for`, source, e);\n    }\n  }\n  const sChildren = Array.from(source.children);\n  const cChildren = Array.from(clone.children).filter((child) => !child.dataset.snapdomPseudo);\n  for (let i = 0; i < Math.min(sChildren.length, cChildren.length); i++) {\n    await inlinePseudoElements(\n      sChildren[i],\n      cChildren[i],\n      styleMap,\n      styleCache,\n      compress,\n      embedFonts\n    );\n  }\n}\n\n// src/core/prepare.js\nasync function prepareClone(element, compress = false, embedFonts = false) {\n  const styleMap = /* @__PURE__ */ new Map();\n  const styleCache = /* @__PURE__ */ new WeakMap();\n  const nodeMap = /* @__PURE__ */ new Map();\n  let clone;\n  try {\n    clone = deepClone(element, styleMap, styleCache, nodeMap, compress);\n  } catch (e) {\n    console.warn(\"deepClone failed:\", e);\n    throw e;\n  }\n  try {\n    await inlinePseudoElements(element, clone, styleMap, styleCache, compress, embedFonts);\n  } catch (e) {\n    console.warn(\"inlinePseudoElements failed:\", e);\n  }\n  let classCSS = \"\";\n  if (compress) {\n    const keyToClass = generateCSSClasses(styleMap);\n    classCSS = Array.from(keyToClass.entries()).map(([key, className]) => `.${className}{${key}}`).join(\"\");\n    for (const [node, key] of styleMap.entries()) {\n      if (node.tagName === \"STYLE\") continue;\n      const className = keyToClass.get(key);\n      if (className) node.classList.add(className);\n      const bgImage = node.style?.backgroundImage;\n      node.removeAttribute(\"style\");\n      if (bgImage && bgImage !== \"none\") node.style.backgroundImage = bgImage;\n    }\n  } else {\n    for (const [node, key] of styleMap.entries()) {\n      if (node.tagName === \"STYLE\") continue;\n      node.setAttribute(\"style\", key.replace(/;/g, \"; \"));\n    }\n  }\n  for (const [cloneNode, originalNode] of nodeMap.entries()) {\n    const scrollX = originalNode.scrollLeft;\n    const scrollY = originalNode.scrollTop;\n    const hasScroll = scrollX || scrollY;\n    if (hasScroll && cloneNode instanceof HTMLElement) {\n      cloneNode.style.overflow = \"hidden\";\n      cloneNode.style.scrollbarWidth = \"none\";\n      cloneNode.style.msOverflowStyle = \"none\";\n      const inner = document.createElement(\"div\");\n      inner.style.transform = `translate(${-scrollX}px, ${-scrollY}px)`;\n      inner.style.willChange = \"transform\";\n      inner.style.display = \"inline-block\";\n      inner.style.width = \"100%\";\n      while (cloneNode.firstChild) {\n        inner.appendChild(cloneNode.firstChild);\n      }\n      cloneNode.appendChild(inner);\n    }\n  }\n  return { clone, classCSS, styleCache };\n}\n\n// src/modules/images.js\nasync function inlineImages(clone, options = {}) {\n  const imgs = Array.from(clone.querySelectorAll(\"img\"));\n  const processImg = async (img) => {\n    const src = img.src;\n    try {\n      const crossOrigin = options.crossOrigin ? options.crossOrigin(src) : \"anonymous\";\n      const dataUrl = await fetchImage(src, 3e3, crossOrigin);\n      img.src = dataUrl;\n      if (!img.width) img.width = img.naturalWidth || 100;\n      if (!img.height) img.height = img.naturalHeight || 100;\n    } catch {\n      const fallback = document.createElement(\"div\");\n      fallback.style = `width: ${img.width || 100}px; height: ${img.height || 100}px; background: #ccc; display: inline-block; text-align: center; line-height: ${img.height || 100}px; color: #666; font-size: 12px;`;\n      fallback.innerText = \"img\";\n      img.replaceWith(fallback);\n    }\n  };\n  for (let i = 0; i < imgs.length; i += 4) {\n    const group = imgs.slice(i, i + 4).map(processImg);\n    await Promise.allSettled(group);\n  }\n}\n\n// src/modules/background.js\nasync function inlineBackgroundImages(source, clone, styleCache, options = {}) {\n  const queue = [[source, clone]];\n  while (queue.length) {\n    const [srcNode, cloneNode] = queue.shift();\n    const style = styleCache.get(srcNode) || getStyle(srcNode);\n    if (!styleCache.has(srcNode)) styleCache.set(srcNode, style);\n    const bg = style.getPropertyValue(\"background-image\");\n    const bgSplits = bg.split(\",\");\n    for (let i = 0; i < bgSplits.length; i++) {\n      const rawUrl = extractURL(bgSplits[i]);\n      if (rawUrl) {\n        try {\n          let bgUrl = encodeURI(rawUrl);\n          let dataUrl;\n          if (bgCache.has(bgUrl)) {\n            dataUrl = bgCache.get(bgUrl);\n          } else {\n            const crossOrigin = options.crossOrigin ? options.crossOrigin(bgUrl) : \"anonymous\";\n            dataUrl = await fetchImage(bgUrl, 3e3, crossOrigin);\n            bgCache.set(bgUrl, dataUrl);\n          }\n          bgSplits[i] = `url(${dataUrl})`;\n        } catch {\n          bgSplits[i] = \"none\";\n        }\n      }\n    }\n    if (bgSplits.some((s) => s.includes(\"url(\"))) {\n      cloneNode.style.backgroundImage = bgSplits.join(\",\");\n    }\n    const sChildren = Array.from(srcNode.children);\n    const cChildren = Array.from(cloneNode.children);\n    for (let i = 0; i < Math.min(sChildren.length, cChildren.length); i++) {\n      queue.push([sChildren[i], cChildren[i]]);\n    }\n  }\n}\n\n// src/core/capture.js\nasync function captureDOM(element, options = {}) {\n  if (!element) throw new Error(\"Element cannot be null or undefined\");\n  const { compress = true, embedFonts = false, fast = true, scale = 1 } = options;\n  let clone, classCSS, styleCache;\n  let fontsCSS = \"\";\n  let baseCSS = \"\";\n  let dataURL;\n  let svgString;\n  ({ clone, classCSS, styleCache } = await prepareClone(element, compress, embedFonts));\n  await new Promise((resolve) => {\n    idle(async () => {\n      await inlineImages(clone, options);\n      resolve();\n    }, { fast });\n  });\n  await new Promise((resolve) => {\n    idle(async () => {\n      await inlineBackgroundImages(element, clone, styleCache, options);\n      resolve();\n    }, { fast });\n  });\n  if (embedFonts) {\n    await new Promise((resolve) => {\n      idle(async () => {\n        fontsCSS = await embedCustomFonts({ ignoreIconFonts: !embedFonts });\n        resolve();\n      }, { fast });\n    });\n  }\n  if (compress) {\n    const usedTags = collectUsedTagNames(clone).sort();\n    const tagKey = usedTags.join(\",\");\n    if (baseCSSCache.has(tagKey)) {\n      baseCSS = baseCSSCache.get(tagKey);\n    } else {\n      await new Promise((resolve) => {\n        idle(() => {\n          baseCSS = generateDedupedBaseCSS(usedTags);\n          baseCSSCache.set(tagKey, baseCSS);\n          resolve();\n        }, { fast });\n      });\n    }\n  }\n  await new Promise((resolve) => {\n    idle(() => {\n      const rect = element.getBoundingClientRect();\n      const w = Math.ceil(rect.width);\n      const h = Math.ceil(rect.height);\n      clone.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n      clone.style.transformOrigin = \"top left\";\n      if (scale !== 1 && isSafari()) {\n        clone.style.scale = `${scale}`;\n      }\n      const svgNS = \"http://www.w3.org/2000/svg\";\n      const fo = document.createElementNS(svgNS, \"foreignObject\");\n      fo.setAttribute(\"width\", \"100%\");\n      fo.setAttribute(\"height\", \"100%\");\n      const styleTag = document.createElement(\"style\");\n      styleTag.textContent = baseCSS + fontsCSS + \"svg{overflow:visible;}\" + classCSS;\n      fo.appendChild(styleTag);\n      fo.appendChild(clone);\n      const serializer = new XMLSerializer();\n      const foString = serializer.serializeToString(fo);\n      const svgHeader = `<svg xmlns=\"${svgNS}\" width=\"${w}\" height=\"${h}\" viewBox=\"0 0 ${w} ${h}\">`;\n      const svgFooter = \"</svg>\";\n      svgString = svgHeader + foString + svgFooter;\n      dataURL = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svgString)}`;\n      resolve();\n    }, { fast });\n  });\n  const sandbox = document.getElementById(\"snapdom-sandbox\");\n  if (sandbox && sandbox.style.position === \"absolute\") sandbox.remove();\n  return dataURL;\n}\n\n// src/api/snapdom.js\nasync function toImg(url, { dpr = 1, scale = 1 }) {\n  const img = new Image();\n  img.src = url;\n  await img.decode();\n  if (isSafari) {\n    img.width = img.width * scale;\n    img.height = img.height * scale;\n  } else {\n    img.width = img.width / scale;\n    img.height = img.height / scale;\n  }\n  return img;\n}\nasync function toCanvas(url, { dpr = 1, scale = 1 } = {}) {\n  const img = new Image();\n  img.src = url;\n  await img.decode();\n  const canvas = document.createElement(\"canvas\");\n  const width = img.width * scale;\n  const height = img.height * scale;\n  canvas.width = Math.ceil(width * dpr);\n  canvas.height = Math.ceil(height * dpr);\n  const ctx = canvas.getContext(\"2d\");\n  ctx.scale(dpr, dpr);\n  ctx.drawImage(img, 0, 0, width, height);\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  return canvas;\n}\nasync function toBlob(url) {\n  const svgText = decodeURIComponent(url.split(\",\")[1]);\n  return new Blob([svgText], { type: \"image/svg+xml\" });\n}\nasync function createBackground(url, { dpr = 1, scale = 1 }, backgroundColor) {\n  const baseCanvas = await toCanvas(url, { dpr, scale });\n  if (!backgroundColor) return baseCanvas;\n  const temp = document.createElement(\"canvas\");\n  temp.width = baseCanvas.width;\n  temp.height = baseCanvas.height;\n  const ctx = temp.getContext(\"2d\");\n  ctx.fillStyle = backgroundColor;\n  ctx.fillRect(0, 0, temp.width, temp.height);\n  ctx.drawImage(baseCanvas, 0, 0);\n  return temp;\n}\nasync function toRasterImg(url, { dpr = 1, scale = 1, backgroundColor = \"#fff\", quality }, format = \"png\") {\n  const canvas = await createBackground(url, { dpr, scale }, backgroundColor);\n  const img = new Image();\n  img.src = canvas.toDataURL(`image/${format}`, quality);\n  await img.decode();\n  img.style.width = `${canvas.width / dpr}px`;\n  img.style.height = `${canvas.height / dpr}px`;\n  return img;\n}\nasync function download(url, { dpr = 1, scale = 1, backgroundColor = \"#fff\", format = \"png\", filename = \"capture\" } = {}) {\n  if (format === \"svg\") {\n    const blob = await toBlob(url);\n    const objectURL = URL.createObjectURL(blob);\n    const a2 = document.createElement(\"a\");\n    a2.href = objectURL;\n    a2.download = `${filename}.svg`;\n    a2.click();\n    URL.revokeObjectURL(objectURL);\n    return;\n  }\n  const defaultBg = [\"jpg\", \"jpeg\", \"webp\"].includes(format) ? \"#fff\" : void 0;\n  const finalBg = backgroundColor ?? defaultBg;\n  const canvas = await createBackground(url, { dpr, scale }, finalBg);\n  const mime = {\n    jpg: \"image/jpeg\",\n    jpeg: \"image/jpeg\",\n    png: \"image/png\",\n    webp: \"image/webp\"\n  }[format] || \"image/png\";\n  const dataURL = canvas.toDataURL(mime);\n  const a = document.createElement(\"a\");\n  a.href = dataURL;\n  a.download = `${filename}.${format}`;\n  a.click();\n}\nasync function snapdom(element, options = {}) {\n  options = { scale: 1, ...options };\n  if (!element) throw new Error(\"Element cannot be null or undefined\");\n  return await snapdom.capture(element, options);\n}\nsnapdom.capture = async (el, options = {}) => {\n  const url = await captureDOM(el, options);\n  const dpr = window.devicePixelRatio || 1;\n  const scale = options.scale || 1;\n  return {\n    url,\n    options,\n    toRaw: () => url,\n    toImg: () => toImg(url, { dpr, scale }),\n    toCanvas: () => toCanvas(url, { dpr, scale }),\n    toBlob: () => toBlob(url),\n    toPng: (options2) => toRasterImg(url, { dpr, scale, ...options2 }, \"png\"),\n    toJpg: (options2) => toRasterImg(url, { dpr, scale, ...options2 }, \"jpeg\"),\n    toWebp: (options2) => toRasterImg(url, { dpr, scale, ...options2 }, \"webp\"),\n    download: ({ format = \"png\", filename = \"capture\", backgroundColor } = {}) => download(url, { dpr, scale, backgroundColor, format, filename })\n  };\n};\nsnapdom.toRaw = async (el, options) => (await snapdom.capture(el, options)).toRaw();\nsnapdom.toImg = async (el, options) => (await snapdom.capture(el, options)).toImg();\nsnapdom.toCanvas = async (el, options) => (await snapdom.capture(el, options)).toCanvas();\nsnapdom.toBlob = async (el, options) => (await snapdom.capture(el, options)).toBlob();\nsnapdom.toPng = async (el, options) => (await snapdom.capture(el, options)).toPng(options);\nsnapdom.toJpg = async (el, options) => (await snapdom.capture(el, options)).toJpg(options);\nsnapdom.toWebp = async (el, options) => (await snapdom.capture(el, options)).toWebp(options);\nsnapdom.download = async (el, options = {}) => {\n  const {\n    format = \"png\",\n    filename = \"capture\",\n    backgroundColor,\n    ...rest\n  } = options;\n  const capture = await snapdom.capture(el, rest);\n  return await capture.download({ format, filename, backgroundColor });\n};\n\n// src/api/preCache.js\nasync function preCache(root = document, options = {}) {\n  const { embedFonts = true, reset = false, crossOrigin: crossOriginFn } = options;\n  if (reset) {\n    imageCache.clear();\n    bgCache.clear();\n    resourceCache.clear();\n    baseCSSCache.clear();\n    computedStyleCache.clear();\n    return;\n  }\n  await document.fonts.ready;\n  precacheCommonTags();\n  let imgEls = [], allEls = [];\n  if (root?.querySelectorAll) {\n    imgEls = Array.from(root.querySelectorAll(\"img[src]\"));\n    allEls = Array.from(root.querySelectorAll(\"*\"));\n  }\n  const promises = [];\n  for (const img of imgEls) {\n    const src = img.src;\n    if (!imageCache.has(src)) {\n      const crossOrigin = crossOriginFn ? crossOriginFn(src) : \"anonymous\";\n      promises.push(\n        fetchImage(src, 3e3, crossOrigin).then((dataURL) => imageCache.set(src, dataURL)).catch(() => {\n        })\n      );\n    }\n  }\n  for (const el of allEls) {\n    const bg = getComputedStyle(el).backgroundImage;\n    const url = extractURL(bg);\n    if (url && !bgCache.has(url)) {\n      const crossOrigin = crossOriginFn ? crossOriginFn(url) : \"anonymous\";\n      promises.push(\n        fetchImage(url, 3e3, crossOrigin).then((dataURL) => bgCache.set(url, dataURL)).catch(() => {\n        })\n      );\n    }\n  }\n  if (embedFonts) {\n    await embedCustomFonts({ ignoreIconFonts: !embedFonts, preCached: true });\n  }\n  await Promise.all(promises);\n}\nexport {\n  preCache,\n  snapdom\n};\n"],
  "mappings": "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",
  "names": []
}
